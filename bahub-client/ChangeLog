CHANGES
=======

* LCM: Added OCI labels
* Environment: Moved environment to the project root directory
* Server: Resolve deprecations
* Server: Resolve deprecations related to createClient()
* Server: Resolved all unit tests
* Server: Deprecations fix - '4x: Return value of "App\Command\Authentication\GenerateTokenCommand::execute()" should always be of the type int since Symfony 4.4, NULL returned.'
* Bahub: Resolve issue with PostgreSQL restore. The bahub container was connecting to a remote host using psycopg2 library, but this operation should actually execute in another container
* Server: Resolved an issue detected by API tests - the token was provided, but the session was anonymous
* Server: PHP 7.4 specific code improvements
* Server: Bug fixes based on tests execution, clean up
* Server: Test database support fixed
* LCM: Corrected permissions in Dockerfile
* LCM: Initial Dockerfile
* LCM: Updated .gitignore
* LCM: Added more automation to the Makefile
* LCM: More docs
* Fixed setuptools scripts
* Bahub: Found a bug - added todo to resolve before releasing next stable
* LittleCopyMachine: A new File Repository client, only for simple mirroring of the data
* SecureCopy: Separation of the event list stream by types, for easier pagination of the data
* Repliaction: Add support for Doctrine's replication (slaves configuration)
* Repication: Do not do request forwarding, just the database forwarding
* Repication: Primary server verification
* Updated version in API doc
* [WIP] Distinct: SecureCopy and Replication modules
* WIP: Working replication for Files
* WIP: Working replication for Files
* #107: Added file metadata - "submitdata" dumping support
* Corrected SQLite support in tests
* #107: Added endpoint for fetching file contents by replication clients. The endpoint supports zero-knowledge replication
* Added \`storage:file:read\` command
* Correct PHP 7.4 migration
* #107: The tokens are now possible to generate with replication settings
* Added version information
* Added version information
* Migration to PHP 7.4
* #104: Cover listing with API tests, fix problems eg. malformed SQL, added permissions to the listing endpoint
* Fixed PostgreSQL database backup & restore
* Updated PHP version to 7.4
* Increase application startup speed by not warming up test and dev environments if not necessary
* Removed unused and undocumented token encryption feature
* #104: Moved parameter from path to query, as the Date Time format will be escaped
* #104: Added id to the returned metadata, swagger docs and error handling
* #104: Flush on each processed chunk if that's possible
* #104: Changed separator to ';;;'
* #104: Added a legend in the header
* #104: Naming refactor
* #104: WIP beginning of the replication endpoint at /replication/list/{?since}
* CI: Changed order of stages and added a MariaDB stage

v2.1.0.rc4
----------

* CI: Trying to run the build
* CI: Trying to run the build
* CI: Trying to run the build
* Bahub client: [#98] Corrected test mock
* CI: Fixed build
* Bahub client: [#98] Added gnutls-dev to Dockerfile, as it is required to build pycurl
* Bahub client: [#98] Added missing requirements
* Bahub client: [#98] Turn off debug ;-)
* Bahub client: [#98] Backups command - Interrupt the HTTP request, when UNIX process was interrupted
* Bahub client: [#98] Corrected early failure check to make sure that case when the process is still running will not throw the exception
* Bahub client: [#98] Check for early failures
* Bahub client: [#99] Kill the process on restore whenever its possible
* Bahub client: [#99] Catch HTTP errors and cancel background process

v2.1.0.rc3
----------

* CI: Fixed build
* CI: Test
* CI: Test
* CI: Fixed \`ln: failed to create symbolic link '/usr/bin/lsb-release': Permission denied\`
* Server: Fixed a stupid error
* Travis: Trying to fix the build
* Travis: Trying to fix the build
* Server: Updated the getting started guide in docs
* Server: Updated the getting started guide in docs
* Travis: Fixing the build
* Travis: Fixed build
* Server: Updated docs
* Server: Updated docs
* Server: Updated docs about the shell access
* Server: Updated docs about the shell access
* Bahub client: Improved doc header
* Bahub client: Updated configuration reference
* Bahub client: Updated docs image
* Bahub client: Updated guide on starting with docker installation, added a tutorial environment
* Server: Implemented a feature to assign a custom id, when creating a collection + added a variable "POST\_INSTALL\_CMD" in Docker container, so it allows to execute shell commands on container startup to pre-create tokens and collections
* Documentation
* Bahub client: Remove docker-s3-api-client environment, too many environments
* Bahub client: Critical fix - overwritten docker DNS servers
* Bahub client: Attempt to run the CI
* Bahub client: Attempt to fix travis build
* Bahub client: Switched to Alpine 3.10, moved part of mysqldump arguments to the \`dump\_cmd\` parameter, increased verbosity in tests
* Bahub client: Corrected Dockerfile, so now it will build
* Bahub client: Now the unit tests are running. It seems that after refactor everything is working
* Bahub client: Added missing dependency - psycopg2
* Server: Restore SQLite3 by default and FS\_ADAPTER=local
* Environment: Added "postgres\_base" example
* Bahub client: Get rid of sudo from code, PostgreSQL base backup method, "CONFIG\_DIR" special variable available in YAML, support for recovery method "on\_failed\_restore"
* Environment: Added MariaDB as database option, also added support for testing bahub locally on the connected environment
* Bahub: Refactor - shorten and simplify the handlers code, add more exceptions handling and better process control
* Bahub: Correct usage of timeouts when spawning processes
* Bahub: Correct restore in PostgreSQL dump/import - now the correct database is choosen, when doing a backup of a single database
* Server: Fixes related to PostgreSQL support, when DATABASE\_URL is set but empty then Doctrine was showing "role www-data does not exist" which was wrong
* Bahub: Partial PostgreSQL support
* Bahub: Added helpful tasks to Makefile
* Bahub: Pipenv - added wrapper for developers
* Bahub: Introducing pipenv
* Bahub: Refactor naming and make a public interface
* Bahub: CI - Added correct tag recognition
* Bahub: Added SERVER\_DOCKER\_TAG to specify the server version (docker image tag)
* Server: Tests - correct configuration for SQLite3
* Server: Tests - correct env variable to correct one
* Server: Tests - correct env variable to correct one
* Server: Add DATABASE\_PATH to the configuration and set default DATABASE\_PORT per supported driver
* Server: CI - add the database file
* Server: Corrected SQLite3 driver settings in unit tests
* Server: Corrected SQLite3 driver detection in unit tests
* Server: (BC!!!) Now DATABASE\_PORT is mandatory to pass as environment variable
* Server: (BC!!!) Migrate from database connection using a connection string to the multiple variables used separately. It works with UNIX sockets for PostgreSQL natively, without doing workarounds
* Server: Use password and user as supplied by DBAL
* Server: Use password for PostgreSQL as supplied by DBAL
* Environment: Parametrized the environment and updated docs
* Server: Fixes to the error handling in health check endpoint and in Flysystem adapter
* Server: Fix up invisible command "auth:generate-admin-token" in "test" environment
* CI: Allow to fail for the nightly tests
* Server: Upgrade dependencies
* CI: Disable deprecations helper
* CI: Migrate the database for functional tests in PHPUnit
* CI: Fix \`copy(./var/data.db): failed to open stream: No such file or directory\`
* Feature: Predictable user tokens. Allows to create an auth-token with manually entered UUIDv4. This opens a possibility to create an admin account on docker container startup
* env: Correct mistake
* env: Make the environment more generic - for production/test/dev
* Updated formatting in docs
* Fixed missing includes in docs
* Docs footer update
* Updated docs

v2.1.0.rc2
----------

* Fixed invalid value instead of date string, detected by functional test on PostgreSQL
* Tests: Support for testing application on PostgreSQL
* Makefile: Corrected arguments passing - those should be allowed to contain spaces
* Resolve: \` Path for output is not writable. Please, set appropriate access mode for output path: /var/www/html/tests/Functional/\_output/\`
* Resolve: \`chown: cannot access '/var/www/html/var': No such file or directory\`
* Restored .dockerignore and .env.test at correct places
* Docker: Add permissions normalization on entrypoint
* CI: Correct permissions
* CI: Debugging CI
* CI: Testz
* CI: Corrected tests. Created new infrastructure for testing locally and on CI - using docker-compose. There are now a few variants of infrastructure - using s3, postgres, with persistence etc
* Healthcheck: Correct typing problem (on PostgreSQL it seems that fetchColumn() returns an integer instead of string)
* Tests/CI: Delete external dependencies from tests, and use internally a docker container that serves static files
* CI: Correct push to quay and tag recognition
* Corrected usage after names refactor
* Updated readmes
* Structure refactor: Added "push\_container" make task
* Structure refactor: Trying to set up the CI
* Project structure refactor + moving from quay.io CI to Travis CI
* Tests: Refactor usages of internal methods
* CI: Corrected tests on Travis. Those tests were not working due to bug in docker-compose (compose was adding suffixes to container names which caused bash scripts not working)
* CI: Clean up containers between test cases
* - Bahub: Fixed incorrect imports - Clean up: Removed gitver, we didnt use it at all
* File Repository: Corrected error

v2.1.0.rc1
----------

* Client - Bahub: Mainly naming refactor
* PostgreSQL support, clean up in "nginx features", updated documentation
* Refactor imports
* Bump docker image on \`master\` branch
* Simplifications to the NGINX configuration
* Simplified the build, the bcmath was moved to base container
* Added dependency for the MySQL check util from RiotKit's CI Utils
* Corrected Bahub integration tests
* Fixes to env support
* Fixed deployment, improved Docker image size
* Added --no-dev to composer at Dockerfile to reduce image size
* Fixed travis build - migrations does not need to be executed in unit tests, they are executed in API tests
* Clean up and fixes to the Docker container
* Improved configuration reference
* Added missing variable \`BACKUP\_MAX\_VERSIONS\` that was not shown in the documentation and .env.dist file
* Docs: Corrected paths in "first steps"
* CI: Refactored Makefile, downgraded PHPUnit for compatibility with Codeception
* CI: Added "skip\_existing: true" to deploy to PIP
* CI: Corrected notifications
* Added build notifications, switched base images in Dockerfile
* Client: Removed pixz as it is not supported by used Alpine
* Client: Added pigz and pixz for parallel archive creation
* Server: Updated dependencies, integrated Sentry.io to the application - deleted special Docker container
* Server: Bump version to rebuild from newest docker's php-app base image. Fixed health check endpoint on sentry
* Server: Hotfix - anti hotlink controller does not work because of invalid configuration
* Server: For for
* Server: Fixed missing ".infrastructure" directory on docker build
* Server: Fixed a typo
* Server: Clean up of the docker container
* Server: Improved size of the docker image, added more accurate health check to the docker image, removed npm from target container
* Server: Resolved problem with composer dependencies
* Server: Adjusted configuration settings to the recent version of base docker container, set memory\_limit to 256 megabytes
* Server: Added info about the authorization to the docs
* Server: Excluded Minimum.UI endpoints from API docs
* Server: Added access control for "/version" endpoint, added api docs
* Server: "/version" endpoint
* Server: Added endpoint "/version"
* Server + Bahub: Added post-commit hook
* Server + Bahub: Automated releasing
* Server: Clean up - deleted postman tests
* Server: Introducing strict versioning with GITVER
* Server: Went back to Symfony 4.2 from 4.3 due to incompatibilites of few bundles, added initial support for API documentation in NelmioApiDocBundle
* Server: Switched base image to image hosted on quay.io
* Server: Adjusted error logging
* Server: Updated docs, added fixes
* Server: Added a feature to optionally allow to restrict usage of token for given User-Agent headers and/or IP addresses. This is a gateway to fully assigned tokens for anonymous users using the application
* Server: Added support for replication READ-ONLY mode, it's now an environment variable "READ\_ONLY". Accepts true/false values
* Server: Disabled Symfony deprecation helper in API tests, so they will now be green. We do not care about deprecations in Codeception API testing framework, we care about deprecations in our code only
* Server: Resolved problems with not up-to-date unit tests
* Server: Resolved problem with PhpUnit version
* Server: Upgraded dependencies to try to resolve the issue on Travis with PHP 7.3 build
* Server: Corrected tests running all together
* Bahub: Corrected logging, now the Docker container is logging to a single file and showing normally the logs
* Server: Added feature - new role "upload.only\_once\_successful" that allows to restrict token to MAXIMUM ONE SUCCESSFUL UPLOAD
* Server: Moved more variables to Dockerfile, so now also the tests on travis should start working
* Server: Covered with API tests the alerting strategy in collection upload
* Server: Resolved a typing problem in backups collection uploading, when a weird failure happens
* Server: Covered collection strategy "delete\_oldest\_when\_adding\_new"
* Server: Versioning functionality is now more generic, and should not be only considered as "backup" but generally as a versioning storage (including backup usage)
* Server: Added additional test case for collections listing test
* Server: cURL exceptions - added one more case to handle
* Server: Added API tests coverage for listing and searching collections
* Server: Added new setting "HTTP\_TIMEOUT" to set timeout on HTTP download, when uploading by URL
* Server: Handling of cURL errors when downloading a remote URL. Now the error is now shown as 500, but as a 400 with details
* Server: Attempt to connect to travis ci + increased coverage
* Server: Travis - fix to try to run codeception api tests
* Server: Clean up in tests
* Server: Covered collections adding, editing, deleting
* Server: Covered collections adding, editing, deleting
* Server: Bugfix - added missing role about editing allowed collections
* Server: Increased coverage
* Server: Added coverage for registry listing, added possibility to backup & restore the database during tests
* Server: Postman support will be completely deleted
* Server: Fixed a high-risk security issue, the local adapter was storing files inside src directory. Symfony cache was indexing this directory while bootstraping (ex. on container restart in production mode, in dev and test modes on each request)
* Server: Covered file registry upload and delete with API tests in codeception
* Server: Increased API tests coverage
* Server: Proper response instead of 500 in case, when fileUrl does not exist in upload-by-url
* Server: Covered authentication module with Codeception API tests
* Server: Fixed multiple files upload at once. All files were getting the same file name. On frontend not sending filename as query string parameter, but in multipart files. On backend added support to take the filename (if not specified in query string) from multipart - for compatibility with various uploaders
* Server: Added initial codeception setup
* Server: Now the "token" and "x-auth-token" headers are properly handled
* Server: Added proper error handling for value objects
* Server: Corrected health checks
* Server: Split filesystem adapters into READ and WRITE for better handling of clusters and performant infrastructures
* Docs: Added listing to index
* Added docs for listing
* Docs: Added info how to provision the token
* Create LICENSE
* The Bahub container now does not generate spam
* Added docker/releases/versioning section
* Added info about quay images
* Made a clean up of infrastructural files and added feature toggle to the NGINX, so new features can be toggled on/off
* AntiHotlink feature: Resolved a notice about array to string conversion ($\_SERVER['argv'] or $\_SERVER['argc'] was an array)
* AntiHotlink feature: The value is now unescaped, it makes life so much easier when a unnecessary quotes are applied (eg. in docker container configuration)

v2.0.6
------

* Added link to the general guide
* Increased coverage by covering the UploadSecurityContext
* Security: Files without a password cannot be overwritten if not an administrator
* Fixed type error in snapshot command
* Not raising an exception in the notifier, just printing it into the stdout - notification error cannot cancel a backup from creation
* Added APP\_DOMAIN variable in case when "Host" header could be incorrect because of eg. complex and invalid networking configuration
* Fixed developer toolbar displaying
* Minimum.ui: Polish/Polski translation
* Minimum.ui: Added tags, visibility, password fields
* Simplification
* Added VIDEO uploading role, the security validation error is now more verbose
* Upgraded libraries to newest versions

v2.0.5
------

* Covered ViewFileHandler partially
* Exported values marked as todo in the container to the .env variables
* Preparation for unit testing
* Fixed magic properties, we use only explicit properties
* Improving performance of the IoC container by excluding non-service classes
* Excluded Controllers and Migrations from coverage
* Added mockery for testing complex classes like Handlers
* Covered aggregate with tests
* Fixed HTTP Bytes range support. So now the application serves partial content on-demand when streaming media files, eg. video files
* The \`make run\_dev\` now runs an official docker image rather than the Symfony's built-in webserver. The reason was that the Symfony's built-in webserver does not support range requests and streaming so good as the NGINX does
* Added missing netcat package, required by recent feature of waiting for database to start
* Added waiting for host to be up (eg. database) on server start
* Adjusted unit tests to changes on purpose
* Added definition name to the notifications and error messages
* Added docs to the monitoring features
* Resolved: \`TypeError: \_\_init\_\_() missing 1 required positional argument: 'notifier'\`
* Clean up
* Improved exception handling, added notifier integration to notify about the exceptions also
* Initial implementation of notifier
* Added support for error handlers with initial support for sentry.io
* Fixed not working templating in the URL, extended the syntax and covered with tests
* Increased tests coverage for value objects: PositiveNumber
* Increasing tests coverage

v2.0.4
------

* Fixed deploy conditions
* Update .travis.yml

v2.0.3
------

* Added deploy credentials
* Fixes to the build
* Fixes to the build
* Changed requirements for the Python version to 3.6 from 3.7, as it is built and works on 3.6
* Bahub release job
* Fixed before\_deploy
* Travis: Added nightly pipeline
* Travis: Fixed Bahub functional build
* Travis: Clean up
* Travis: Removed Python 3.8 tests as Python 3.8 cannot be launched on travis at now
* Travis: Clean up
* Travis: Split into multiple jobs
* Travis: debug
* Fixed "kill\_test\_containers" task
* Travis: build stabilization
* Covered Checksum valueobject with tests
* Travis: build stabilization
* Set /bin/bash as default shell for all executed commands (because /bin/sh does not support same options as bash eg. pipefail)
* Travis: build stabilization
* Added snapshot functionality
* Added coverage badge
* Added coverage for Python part
* Added codecov.io integration
* Added coverage logging
* Bahub: Added DNS configuration
* Trying to repair travis build
* Added openssl to the travis build
* Added support for Sentry tool - see sentry.io, it's a tool to catch exceptions on production
* Covered additional case - when encryption configuration is returning bad exit code
* Covered generally backup handlers. The tests are detecting if the failures are properly detected eg. when command pipeline fails
* Cleaned up unit tests warnings by closing the stream with f.close() even when in YAML parser there is an exception
* General improvements for error detection on the pipelining process
* [https://github.com/riotkit-org/file-repository/issues/60] Partially resolved the issue by added upload validation (in \_validate\_running\_command())
* [https://github.com/riotkit-org/file-repository/issues/59] Token is now also hidden in logs
* [https://github.com/riotkit-org/file-repository/issues/59] Added PasswordsProtectedFilter that is cutting of sensitive data from logs
* [https://github.com/riotkit-org/file-repository/issues/56] Fixed error handling in docker adapters
* Fixed logs path
* Updated PHP and JS dependencies
* Updated docs
* Travis: Debug
* Travis: Attempt to speed up the build
* Travis debug
* Travis debug
* Travis debug
* Travis debug
* Travis debug
* Update .travis.yml
* Update .travis.yml
* Update .travis.yml
* Update Makefile
* Update .travis.yml
* Update .travis.yml
* Update .travis.yml
* Update .travis.yml
* Added a feature to disable cronjobs on development environment - to not override production backups
* Switched to SafeLoader for the YAML parsing
* Added explicite usage of CLoader, so it will no longer show deprecation warning
* Added explicite usage of CLoader, so it will no longer show deprecation warning
* Travis debug
* Update .travis.yml
* Update .travis.yml
* Fixes to run the travis build
* Adjustments to travis build
* Added info about the testing
* Fixing travis build for Python unit tests
* Travis-ci compatibility fix - "whereis" is not accessible, but "which" should be
* Fixed an accidential typo that was causing infinite loop (until max execution time reached) and corrected api tests, so they test what was expected to test (there was a configuration change in the .env.dist that needed to be included in the test)
* Covered definition factory
* Added badges
* Probably fixed the travis build
* Covered additional entity by unit tests
* Added first unit tests
* Implemented additional integration tests for "recovery from disaster" feature
* Initial support for "recovery from disaster" feature
* Fixed not launching crontab
* For security reasons limited Accept-Range requests to take only 1 range at a time
* Disabled request buffering for upload endpoints, in most cases an external gateway has also the output buffering which doubles the work and slows down application alot
* Fixed problem with max\_execution\_time being not returned as int
* Selectively increased max execution time for upload endpoints
* Updated docs, dev mode is no longer recommended
* Added SQLite3 example
* Updated documentation by adding a lot of examples and references, simplified introduction steps
* Added bahub deploy to PyPI
* Increased limit on nginx, so the bigger backups will be uploaded
* Improved error handling in case the user does not provide any valid source of upload (uploads 0 bytes)
* Corrected error handling
* OpenSSL - removed "-pbkdf2" parameter from default command, as this switch is not always supported, updated docs about openssl
* Resolved a problem with too small column size that cannot handle size in gigabytes - second resolution, because Doctrine didn't execute second query to change second column from migration
* Resolved a problem with too small column size that cannot handle size in gigabytes
* Travis will build now the image from scratch to have a recent version
* Deleted aliases tests - its notp possible to make them working because of the hash generation difference in time
* Travis debug
* Travis debug
* Travis debug
* Travis debug
* Travis debug
* Added prod.log displaying at the end of PHP travis build
* Attempting to set up travis build
* Made first tests for the Bahub CLI client
* Started adding tests
* Added a command to create a collection, updated docs
* - Added restore working in all types of backup source - Configuration now accepts also environment variable
* Added initial support for setuptools
* Clean up
* Fixed issue when the guest session was more important than admin technical session
* Initially added bahub to docs
* Bahub restore and list commands
* WIP: Bahub - a shell API client specialized in backups of local files, command outputs and docker containers
* Fixed default environment variables values. The quotes are not good, because they are actually passed..
* Fixed caching after adding range bytes
* Added support for bytes range
* Added initially support for catching upload errors that are coming from PHP upload mechanism
* Improved implementation of access rights
* Increased upload\_max\_filesize
* Unified permissions implementation on dev and prod environments
* Now the 'security.administrator' role is granting all permissions automatically
* Fix: Application is now not forking into background
* Fixed container names
* - Added a prod entrypoint that will now deploy the update of the application before starting it. The deploy includes eg. migrations, cache clearing etc
* - Support for Minio through S3 interface (awss3v3) - Refactored filesystem adapters configuration (ConfigParser), is now more elastic and gives possibility to configure more deep options (arrays in arrays of n depth are supported) - More clear S3 interface configuration with a ready-to-go example in .env.dist
* Added a command to generate admin tokens from shell
* Added MySQL example in .env.dist
* Fixed travis build
* Added required libzip
* Added phpunit shortcut
* Added required "zip" extension to the docker container
* Added unit tests support and first unit test
* Hotlink support: Fixed configuration reading problem, environment variable values were normalized to lower case which destroyed the ANTI\_HOTLINK\_SECRET\_METHOD value
* Removed debug from API Tests
* Travis debugging: SQLite3 will be the default database
* Added link to the documentation, and improved the description about why the project was created
* Changed file descriptions and set the license
* Readthedocs: Fixing 'ascii' codec can't decode byte 0xc5 in position 11: ordinal not in range(128)
* Readthedocs: Added sphinx-glpi-theme to the requirements.txt
* Fixed the order of loading doctrine mappings
* @debug
* Travis: Composer debugging
* Added travis integration
* ANTI\_HOTLINK\_SECRET\_METHOD now has a better default that should be realistic to setup for most of the users
* Added more documentation about aliasing and hotlink protection
* Fixed invalid boolean casting
* - Anti hotlink mechanism - Filename mapping mechanism
* - MinimumUI: Added video player endpoint /minimum.ui/watch/video/{fileId} - Storage domain: Added partial support for BYTES RANGE - Storage domain: Deduplication is now not possible to turn off, it can be prefixed with "contentIdent" which is added to the checksum (only works internally when using DomainBus between domains eg. from Backup domain) - Migrations: Fixed incorrectly created constraints - Better recognition of invalid multipart uploads (will return a 500 if the POST MAX SIZE of PHP settings is reached and the file is submitted as body stream) - Partial CI environment based on Docker
* Clean up + minimum ui documentation
* - MinimumUI - first working version with files and images uploading - Switched Bower to NPM - API now does not return 301 HTTP codes when file already exists, now it returns 202 - Upgraded MinimumUI code to ES6 standard - Upload endpoint now returns also requested filename
* WIP: MinimumUI - improvements to the images cropper
* WIP: MinimumUI - uploading images and files, support for base64 encoded uploads (easier for implementation of frontends in web browser), roles - enforcing no password and tags from token
* Better error handling in authentication domain, added a few postman tests, updated documentation
* Improvements to documentation, token deletion, expiration date for tokens
* Added documentation and improved permissions (added missing roles)
* Deleted first version
* Added endpoint for easier fetching of collection version eg. /repository/collection/some-collection/backup/latest     /repository/collection/some-collection/backup/first     /repository/collection/some-collection/backup/v1     /repository/collection/some-collection/backup/SOME-UUID-HERE
* Cancelled Webhooks support for now. Need to focus on finalization of basic functionality
* Added endpoints for listing and deleting versions
* Added endpoint for uploading files to the collection
* Added endpoint for revoking access to collections
* Added endpoint for attaching tokens to collections
* Added listing endpoint
* Updated documentation
* Added delete and fetch endpoints
* Added collection creation endpoint
* Domain logic validation for the creation endpoint
* Collections creation endpoint
* Updated dependencies versions
* Domain models for Backup Domain
* Access rights for listing
* Listing endpoint
* Roles list and response standarization
* HTTP cache support
* Deletion endpoint
* - Improvements to the authentication and 403 error handling - Added additional roles in authentication domain - Added some postman api tests coverage
* Tags support, test http provider in test and dev mode (supports file:// protocol for testing), several fixes
* Initial commit
* Sync dev front-controller with prod (allow images to be fetched...)
* Fixed tests to fit current path of images
* Added Heroku deploy button
* Updated configuration documentation and added environmental variables to Heroku configuration file
* Clean up of images
* Fixed JSON support
* Fixed bower install execution when its not installed globally
* Updated documentation, naming
* Added more detail licensing information
* Added integration with Heroku
* Updated logo
* Loop config keys
* Add comment for phinx configuration
* Update gitignore
* Remove .idea folder (PhpStorm/IntelliJ from JetBrains)
* Configure automatically Phinx with \*.custom.php files
* Enhance mime-type detection
* [#10] Added support for database tables prefixing
* Fix things about test env
* Strict type
* Remove dependency to val/doctrine-table-prefix-service-provider and use last version of doctrine receipt
* Updated travis badge
* Remove use statement and use full package name
* Allow table to be prefixed (using val/doctrine-table-prefix-service-provider)
* Make dev configuration customizable
* Make database configurable
* Fix: don't force weburl parameter in config/dev.php
* Fixed support for SSL
* Added tests and fixes existing tests
* Implemented HTTP cache (ETag, Last modified), refactored the code a little bit - extracted code into service
* Added search query paramater to the find action
* Added order by to the search action
* Improved callbacks, token handling, updated dependencies
* Support for uploading regular files using temporary tokens, configurable aspect ratio for image upload
* Added support for png files, upgraded version of cropperjs to 1.0
* Exposing also the url of files
* Fixed: Case when there were no results if offset and limit was higher
* Added pagination information to the FindAction
* Switched response to be snake case, upgraded libraries, updated README.md
* Now handling also escaped variable |url|
* Now handling also escaped variable |url|
* Clean up
* Added .idea to the .gitignore

v1.1.0
------

* [https://github.com/Wolnosciowiec/image-repository/issues/1][https://github.com/Wolnosciowiec/image-repository/issues/3] Implemented tags support
* Security fix: Escaping upload/download paths
* Added bower to the package.json for Heroku
* Added missing directory, updated dependencies
* Connected travis-ci
* Added automatic tests
* - Generating temporary access tokens - Uploading images from HTML form with possibility to crop the image
* Formatting fix
* Fixed db problem
* Added instructions how to install on a remote FTP server
* Added instructions how to install on a remote FTP server
* Added vendor to phploy deployment
* Moved databases to the "data" directory, moved Phinx config to PHP format, added web deployment using "wolnosciowiec/wolnosciowiec-web-deploy"
* Updated dependencies
* Changed deployment method to phploy, which seems to be working very well
* Whitelisted docker host address
* Now the database is per environment - Phinx is now also building both environment databases
* Now the database is per environment
* Fixed last commit
* Now the application should return only full links, not only relative paths
* Added versioning
* Fixed deployment script
* Update README.md
* Added API key to the URL for Heroku test app
* Added Heroku badge
* Added Heroku badge
* Fixed heroku integration
* Fixed heroku integration
* Updated composer lock
* Added heroku integration
* Added heroku integration
* Added heroku integration
* Fixed
* Exists and delete methods
* Added travis-ci badge to the README.md
* Added initial travis file to just test the deployment, phpunit tests will be implemented soon
* Added Registry feature. From technical side: Added database and migrations support
* Updated deployment script, now it has a possibility to remember passwords
* Added examples
* Added uploading with HTTP protocol support
* Updated deployment scripts
* Update README.md
* Deployment script
* Deployment script
* Deployment script
* Deployment script
* htaccess for Apache, a few new controllers :)
* First commit
* initial commit
