bahub_template: &bahub_template
    before_install:
        - sudo apt-get update
        - sudo apt-get install -y openssl gnutls-dev libcurl4-gnutls-dev

        # fix for the Python PIP that cannot locate lsb-release
        - sudo ln -s /usr/bin/lsb_release /usr/bin/lsb-release

        - cd bahub-client && make install_requirements PIP="pip" PIP_ARGS=" --ignore-installed " SUDO="" && cd ..

        - # change docker-compose to a version that contains this fix: https://github.com/docker/compose/pull/6377/files
        - sudo curl -L "https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/bin/docker-compose

main_python_version: &main_python_version
    language: python
    dist: bionic
    services: docker
    python: 3.6

main_php_version: &main_php_version
    language: php
    services: docker
    php: 7.4

language: php
os: linux

jobs:
  include:
#    - stage: File Repository unit tests @ PHP 7.4
#      <<: *main_php_version
#      before_script:
#          - cd server && make install migrate
#      script:
#          - make coverage
#      after_success:
#          - bash <(curl -s https://codecov.io/bash) -cF php
#          - bash ./.infrastructure/ci/notify.sh "${SLACK_URL}" " [OK] File repository unit tests passed."
#      after_failure: bash ./.infrastructure/ci/notify.sh "${SLACK_URL}" " [FAILURE] File repository unit tests are failing."
#
#    - stage: File Repository API tests (Min.io + PostgreSQL)
#      <<: *main_php_version
#      script: cd server && make test_api@ci SUDO="" TAG=${TRAVIS_TAG:-dev} VARIANT="s3 postgres"
#      after_success: bash ./.infrastructure/ci/notify.sh "${SLACK_URL}" " [OK] File repository API tests on Min.io passed."
#      after_failure: bash ./.infrastructure/ci/notify.sh "${SLACK_URL}" " [FAILURE] File repository API tests on Min.io are failing."

    #
    # Bahub (Backups API client)
    #
    - stage: Bahub tests @ Python 3.6
      <<: *main_python_version
      <<: *bahub_template
      before_script:
          - cd server && make build_container TAG=${TRAVIS_TAG:-dev} && cd ..
          - cd bahub-client && make build_container TAG=${TRAVIS_TAG:-dev} PIP="pip" PIP_ARGS=" --ignore-installed " SUDO="" && cd ..
          - cd server && make build_container TAG=${TRAVIS_TAG:-dev} && cd ..
      script:
          - cd env && make up wait_for_app VARIANT="test postgres bahub-test" && cd ..
          - sleep 30
          - cd bahub-client && make install test PIP="pip" PIP_ARGS=" --ignore-installed " SUDO=""
      after_success:
          - bash <(curl -s https://codecov.io/bash) -cF python
          - bash ./.infrastructure/ci/notify.sh "${SLACK_URL}" " [OK] Bahub tests passed."
      after_failure:
          - bash ./.infrastructure/ci/notify.sh "${SLACK_URL}" " [FAILURE] Bahub tests are failing."

    - stage: File Repository API tests (local storage + SQLite3)
      <<: *main_php_version
      script: cd server && make server@test_api@ci SUDO="" TAG=${TRAVIS_TAG:-dev} VARIANT=""
      after_success: bash ./.infrastructure/ci/notify.sh "${SLACK_URL}" " [OK] File repository API tests on local storage passed."
      after_failure: bash ./.infrastructure/ci/notify.sh "${SLACK_URL}" " [FAILURE] File repository API tests on local storage are failing."

    - stage: File Repository API tests (Min.io + MariaDB)
      <<: *main_php_version
      script: cd server && make server@test_api@ci SUDO="" TAG=${TRAVIS_TAG:-dev} VARIANT="s3 mariadb"
      after_success: bash ./.infrastructure/ci/notify.sh "${SLACK_URL}" " [OK] File repository API tests on MariaDB."
      after_failure: bash ./.infrastructure/ci/notify.sh "${SLACK_URL}" " [FAILURE] File repository API tests on MariaDB are failing."

    # ================
    #  Release: Docker
    # ================
    - stage: "Server: Publish docker image"
      <<: *main_python_version
      before_script:
          - echo "$QUAY_PASSWORD" | sudo docker login -u "$QUAY_USERNAME" --password-stdin quay.io
      script: cd server && make build_container push_container TAG=${TRAVIS_TAG:-dev}

    - stage: "Bahub Client: Publish docker image"
      <<: *main_python_version
      before_script:
          - echo "$QUAY_PASSWORD" | sudo docker login -u "$QUAY_USERNAME" --password-stdin quay.io
      script: cd bahub-client && make build_container push_container TAG=${TRAVIS_TAG:-dev}


    # ==============
    #  Release: PyPI
    # ==============
    - stage: "Bahub Client: Deploy to PyPI"
      <<: *main_python_version
      script: cd bahub-client
      deploy:
          skip_cleanup: true
          provider: pypi
          distributions: sdist bdist_wheel
          skip_existing: true
          on:
              all_branches: true
              condition: $TRAVIS_TAG =~ ^v[0-9\.a-z\-]+ || $TRAVIS_BRANCH == "master"
          user: marek_man
          password:
              secure: XUgQcpOxE2HCcmD8uJ8yzBsxnIdH8SNA91fEC54fzVvD5KupxFtuLs5OAL9Mj0xiXjfoTAS5za4RaPCSQPu/GVvmAtMnA1+tjdk1NxenmtlZOR54PmaQ3gY4QTyb0UUH08QcG5MZA0EDBlhyOcxpf5jp30oUT/h3zSHCM/hJ6lsoDtwn7foBUtLDxlOVIwdA7rO5pWPhg2YKJDlPkg6Bo2TpNMtKh4kjSN3somD1GRDdBEnqPKlSFi5Xiu3RhFwoUohGPMZhocrwA9aaLonx+XmZ+KOqiJX+kJg2c1hreYHUlqVCydHIDrnA8iQKEs+alI71ERGUuTkXZQYDfUJ1s7Ycnpj0Xg8iBa4bGSpvjNJYYfulXjFUH9XdIk2OMYzsKbuv+AS0aIQHjQXqk4u5szqZKhmpTYyRHdMObODjTBB1Vgdz3N437ex+biApsm7fM7QKN7iFD6RNqGPa2ksrF80/lxnvCkVTU1MGOqxsdsBEO1hoCl8OxqtNoTzLoJDwq7zJpMIrBbjnsum86QpGZh85JO8kzDeSvK08lRz3fqwbQjw6WhJbqeev6l+YvUWFKq8E+ElVVuj7xelKSjW0DBYdxVKKhlF7C2CaJnikvd2Y8nnMVtSQrlOPCh0KZm4tj+AoaOKNYa/EdefwS2coJZPstqq8l1AvN3L6fAuxj9s=

    # =============================================
    #  Additional, optional stages allowed to fail
    # =============================================
    - stage: File Repository unit tests @ PHP nightly (allowed to fail)
      language: php
      php: nightly
      before_script:
          - cd server
          - composer update || true
          - make migrate || true
          - mkdir -p ./var && chmod 777 ./var -R
      script: make coverage || true
