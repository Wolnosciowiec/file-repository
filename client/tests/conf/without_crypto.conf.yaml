
accesses:
    backup_one:
        url: http://10.5.0.4
        token: "${ADMIN_TOKEN}"

encryption:
    none:
        passphrase: ""
        method: ""


backups:

    docker_hot_volumes_example:
        type: docker_hot_volumes
        container: "tests_test_www_1"
        access: backup_one
        encryption: none
        collection_id: "${COLLECTION_ID}"
        paths:
            - /var/www
            - /var/log

    www_docker_offline:
        type: docker_volumes
        container: "tests_test_www_1"
        access: backup_one
        encryption: none
        collection_id: "${COLLECTION_ID}"
        paths:
            - /etc
            - /var/log

        # optional
        docker_bin: "sudo docker"
        tar_pack_cmd: "tar -czf %stdin% %paths%"
        tar_unpack_cmd: "tar -xzf %stdin% %target%"
        temp_image_name: "alpine:3.9"
        temp_image_cmd: "apk add --update xz bzip2 && sleep 3600"

    mysql_native_single_database:
        type: mysql
        host: "tests_test_database_1"
        port: 3306
        user: root
        password: root
        database: "performance_schema"
        access: backup_one
        encryption: none
        collection_id: "${COLLECTION_ID}"

    mysql_docker_single_database:
        type: mysql
        host: localhost
        port: 3306
        user: root
        password: root
        database: "performance_schema"
        container: "tests_test_database_1"     # this one is required to use a docker container
        access: backup_one
        encryption: none
        collection_id: "${COLLECTION_ID}"

    docker_command_output:
        type: docker_output
        container: "test_www"
        command: "cat /etc/resolv.conf"
        restore_command: "cat - > /var/www/html/resolv.conf.txt"
        access: backup_one
        encryption: none
        collection_id: "${COLLECTION_ID}"

    local_command_output:
        type: command_output
        command: "cat /etc/fstab"
        restore_command: "cat - > /tmp/fstab.restored"
        access: backup_one
        encryption: none
        collection_id: "${COLLECTION_ID}"

    some_local_logs:
        type: directory
        paths:
            - "/tmp/temp-backup"
        access: backup_one
        encryption: none
        collection_id: "${COLLECTION_ID}"

recoveries:
    default:
        policy: restore-whats-possible
        definitions: all

    plan_2:
        policy: restore-whats-possible
        definitions:
            - local_command_output
