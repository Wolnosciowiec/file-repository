name: "Backup Repository release workflow"
on:
    create:
        tags:
            - v*

jobs:
    "release":
        runs-on: ubuntu-20.04
        steps:
            - name: "Checkout"
              uses: actions/checkout@v1

            - name: "Login to quay"
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.QUAY_USERNAME }}
                  password: ${{ secrets.QUAY_PASSWORD }}

            # —— Dependencies ——————————————————————————————————————————————————
            - name: "Install build dependencies"
              run: "sudo pip install -r ./requirements.txt"
              working-directory: "server"

            - name: Setup PHP, extensions and composer
              uses: shivammathur/setup-php@v2
              with:
                  php-version: "7.4"
                  extensions: mbstring, ctype, iconv, intl, fileinfo, openssl, filter, iconv, json, mbstring, pdo, pdo_pgsql
                  tools: symfony, composer
              env:
                  update: true

            # —— Build —————————————————————————————————————————————————————————
            - name: "Build and push distribution package"
              runs: "rkd :release:dist-zip"
              working-directory: "server"

            - name: "Build and push docker image"
              runs: "rkd :release:docker-image"
              working-directory: "server"

            # —— Archive packages ——————————————————————————————————————————————
            - name: "Archive results"
              uses: actions/upload-artifact@v2
              if: ${{ always() }}
              with:
                  name: complete-distributable-package.zip
                  path: server/var/dist.zip

            # —— Create a new release ——————————————————————————————————————————
            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                tag_name: ${{ github.ref }}
                release_name: Release ${{ github.ref }}
                draft: true
                prerelease: false

            - name: Upload Release Asset
              id: upload-release-asset
              uses: actions/upload-release-asset@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                upload_url: ${{ steps.create_release.outputs.upload_url }}
                asset_path: server/var/dist.zip
                asset_name: backup-repository-${{ github.ref }}.zip
                asset_content_type: application/zip
