#
## Build stage container: Build frontend
#
FROM quay.io/riotkit/php-app:7.4-x86_64 as builder

ADD server/Makefile /var/www/html/
ADD server/package.json /var/www/html/
ADD server/package-lock.json /var/www/html/

RUN rm -rf /var/lib/apt/lists/* \
    && apt-get update \
    && curl -sL https://deb.nodesource.com/setup_9.x | bash - \
    && apt-get install -y nodejs npm make gcc g++ \
    && chown -R www-data:www-data /var/www \
    && cd /var/www/html \
    && su www-data -s /bin/bash -c "make install_frontend" \
    \
    && cd /var/www/html \
    && apt-get remove -y gcc g++ \
    && apt-get clean \
    && rm -rf docs examples var/cache/* var/log/* var/data.db client

#
## Destination container: Backend + built container from previous stage
#
FROM quay.io/riotkit/php-app:7.4-x86_64

RUN rm -rf /var/lib/apt/lists/* \
    && apt-get update \
    && apt-get install -y curl bash gnupg2 netcat libzip4 python3 \
    && apt-get autoremove -y \
    && apt-get clean

{% include ".infrastructure/env-variables.Dockerfile-part" %}

ENV POST_INSTALL_CMD=""

COPY server /var/www/html
COPY --from=builder /var/www/html/public /var/www/html/
ADD server/.infrastructure/primary/entrypoint/entrypoint.d/*.sh /entrypoint.d/
ADD server/.infrastructure/healthcheck.sh /

RUN cd /var/www/html \
    && rm -rf var/cache/* \
    && rm -rf var/log/* \
    && rm -rf var/uploads/* \
    && rm -f var/*.db \
    && cp .env.dist .env \
    \
    # NGINX configuration
    && cp /var/www/html/.infrastructure/primary/nginx/nginx.conf /etc/nginx/nginx.conf \
    \
    # Application permissions and general scripts setup
    && chown www-data:www-data /var/www -R \
    && su www-data -s /bin/bash -c "composer install --no-dev" \
    && chown www-data:www-data /var/www -R

WORKDIR "/var/www/html"

HEALTHCHECK --interval=30s --timeout=3s CMD /healthcheck.sh || exit 1
