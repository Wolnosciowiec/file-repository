version: org.riotkit.rkd/yaml/v1
imports:
    - rkt_utils.docker

env_file:
    - ../.env

tasks:
    :install:
        description: Installs local dependencies
        arguments:
            "--dev":
                help: "Include development dependencies"
                action: "store_true"
        steps: |
            switches=""

            if [[ $ARG_DEV != "True" ]]; then
                switches=" --no-dev "
            fi

            eval "composer install --no-scripts ${switches}"

    :dev:server:
        description: Run development server
        steps: symfony serve -d

    :create:admin-account:
        description: "Create a test admin user account, e-mail: example@riseup.net, password: example_1234"
        steps: ./bin/console auth:create-admin-account --email=example@riseup.net --password=example_1234

    :create:keys:
        description: "Create JWT encryption keys (WARNING: Overwriting keys will result in revoking all existing generated JWT)"
        steps:
            - mkdir -p config/jwt
            - openssl genpkey -out config/jwt/private.pem -aes256 -pass pass:$JWT_PASSPHRASE -algorithm rsa -pkeyopt rsa_keygen_bits:4096
            - openssl pkey -in config/jwt/private.pem -out config/jwt/public.pem -pubout -passin pass:$JWT_PASSPHRASE

    :test:unit:
        description: Run unit tests
        steps: |
            mkdir -p var/tests
            SYMFONY_DEPRECATIONS_HELPER=weak ./vendor/bin/phpunit --coverage-html=var/tests/coverage

    :test:unit:html:
        description: Create report in HTML format
        steps: vjunit -f var/tests/unit.junit.xml -o var/tests/unit.junit.html

    :build:dist-zip:
        description: Creates a distribution package
        steps:
            - composer install
            - rm -f ./var/dist.tar.gz
            - |
                tar -zcvf ./var/dist.tar.gz  \
                    --exclude=.env \
                    --exclude=.venv \
                    --exclude=config/jwt \
                    --exclude=var \
                    --exclude=.phpunit.result.cache \
                    --exclude=phpunit* \
                    --exclude=codeception* \
                    --exclude=tests \
                    --exclude=.infrastructure \
                    --exclude=.rkd \
                    *

    :build:docker:
        description: Build the docker image
        steps:
            - cd .. && docker build . -f server/.infrastructure/Dockerfile -t quay.io/riotkit/backup-repository:latest-dev

    :build:swagger-docs:
        description: Create API documentation in SWAGGER json format
        steps:
            - ./bin/console docs:swagger:json > swagger.json

    :build:docs:
        description: Build release manual documentation
        steps:
            - cd ../docs && sphinx-build -M html "source" "build"

    :release:docker:
        description: Release a previously built docker image
        arguments:
            "ref":
                help: "Tag name"
            "--push":
                help: "Should the images be pushed to registry?"
                action: "store_true"
        steps:
            - |
              if [[ $ARG_REF =~ ^v[0-9\.]$ ]]; then
                  docker tag quay.io/riotkit/backup-repository:latest-dev quay.io/riotkit/backup-repository:${ARG_REF}

                  if [[ $ARG_PUSH ]]; then
                      %RKD% @ --image quay.io/riotkit/backup-repository:${ARG_REF} --propagate :docker:tag :docker:push
                  fi
                  docker tag quay.io/riotkit/backup-repository:${ARG_REF} quay.io/riotkit/backup-repository:latest-release

                  if [[ $ARG_PUSH ]]; then
                      docker push quay.io/riotkit/backup-repository:latest-release
                  fi
              fi

              if [[ $ARG_PUSH == "True" ]]; then
                  docker push quay.io/riotkit/backup-repository:latest-dev
              fi
