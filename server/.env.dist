# This file is a "template" of which env vars need to be defined for your application
# Copy this file to .env file for development, create environment variables when deploying to production
# https://symfony.com/doc/current/best_practices/configuration.html#infrastructure-related-configuration

# ========================================
# Symfony framework specific configuration
# ========================================

# possible values: prod, test, dev. Use "prod" for public instances. Use "test" installing the application and changing its configuration
APP_ENV=prod
#APP_SECRET=faec5e5fcf0ff499f53ecc30bdffc653
#TRUSTED_PROXIES=127.0.0.1,127.0.0.2
#TRUSTED_HOSTS=localhost,example.com


# =========
# Technical
# =========

BASE_URL=http://localhost:8000

# how long can take request if it is expected, that it will take long (eg. file upload)
# please consider there if you have request buffering enabled in webserver, nginx has this by default
#LONG_EXECUTION_TIME=300
#TEMP_DIRECTORY=/tmp
#HTTP_TIMEOUT=30
#READ_ONLY=false

# Health check, will expose an endpoint http://your-app/health?code=some-code-there
# use it to connect your application into the monitoring. It will report storage, database health.
HEALTH_CHECK_CODE=test


# ==============================
# Application connection details
# ==============================
DATABASE_URL=postgres://chomsky:chomsky@127.0.0.1:5432/chomsky


# ===============
# Backups feature
# ===============

BACKUP_ONE_VERSION_MAX_SIZE=4GB
BACKUP_COLLECTION_MAX_SIZE=15GB
BACKUP_MAX_VERSIONS=5

# =======
# Storage
# =======
# <docs:storage>

#
#  Storage type:
#    local: local filesystem
#    aws: AWS S3, Minio.io or other compatible with AWS S3 interface
#    gcloud: Google Cloud Storage
#

# select which configuration is in use
FS_RW_NAME=AWS
FS_RO_NAME=AWS

# Google Cloud Storage
FS_GC_ADAPTER=gcloud
FS_GC_PREFIX=
FS_GC_BUCKET=my-backups-storage
FS_GC_KEYFILEPATH=/home/backuprepository/gcs-service-account.json
FS_GC_PROJECTID=my-backup-hosting

# AWS S3, Min.io example
FS_AWS_ADAPTER="aws"
FS_AWS_ENDPOINT="http://localhost:9000"
FS_AWS_BUCKET="malatesta"
FS_AWS_REGION=eu-central-1
FS_AWS_VERSION=latest
FS_AWS_CREDENTIALS_KEY="RIOTKIT161ACABEXAMPL"
FS_AWS_CREDENTIALS_SECRET="wJalrFUckXEMI/THEdEZG/STaTeandCAPITALKEY"

# Local filesystem
FS_LOCAL_ADAPTER=local
FS_LOCAL_DIRECTORY="%kernel.root_dir%/../var/uploads"
FS_LOCAL_PERMISSIONS_FILE_PUBLIC=0644
FS_LOCAL_PERMISSIONS_DIR_PUBLIC=0755
FS_LOCAL_LOCK=false
FS_LOCKL_SKIP_LINKS=true

# </docs:storage>

###> lexik/jwt-authentication-bundle ###
JWT_SECRET_KEY=%kernel.project_dir%/config/jwt/private.pem
JWT_PUBLIC_KEY=%kernel.project_dir%/config/jwt/public.pem
JWT_PASSPHRASE=fc0774955def1f2e92e6bdcad18a9f97
JWT_LIFETIME="+1 hour"
###< lexik/jwt-authentication-bundle ###
